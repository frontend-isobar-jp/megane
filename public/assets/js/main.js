!function t(e,i,n){function s(l,r){if(!i[l]){if(!e[l]){var a="function"==typeof require&&require;if(!r&&a)return a(l,!0);if(o)return o(l,!0);var c=new Error("Cannot find module '"+l+"'");throw c.code="MODULE_NOT_FOUND",c}var d=i[l]={exports:{}};e[l][0].call(d.exports,(function(t){return s(e[l][1][t]||t)}),d,d.exports,t,e,i,n)}return i[l].exports}for(var o="function"==typeof require&&require,l=0;l<n.length;l++)s(n[l]);return s}({1:[function(t,e,i){var n,s;n=this,s=function(){function t(t,e){this.selector=t,this.accordion=document.querySelectorAll(this.selector),null==e&&(e={}),this.toggleSpeed=e.toggleSpeed?e.toggleSpeed:1,this.btnElm=e.btnElm?e.btnElm:this.selector+"_btn",this.detailElm=e.detailElm?e.detailElm:this.selector+"_detail",this.OpenEnd=function(){},this.CloseEnd=function(){},this.clickFlag=!1,0!=this.accordion.length&&this.Init()}return t.prototype.AddTransition=function(t){t.style.transition="max-height "+this.toggleSpeed/1e3+"s",t.style.setProperty("-webkit-transition","max-height "+this.toggleSpeed/1e3+"s")},t.prototype.RemoveTransition=function(t){t.style.transition="none",t.style.setProperty("-webkit-transition","none")},t.prototype.Init=function(){var t=this,e="overflow: hidden;";e+="transition: max-height "+this.toggleSpeed/1e3+"s ;",e+="-webkit-transition: max-height "+this.toggleSpeed/1e3+"s ;";for(var i=0;i<this.accordion.length;i++){var n=this.accordion[i].querySelectorAll(this.detailElm),s=this.accordion[i].querySelectorAll(this.btnElm);0==n.length&&console.error(this.detailElm+" is not found"),0==s.length&&console.error(this.btnElm+" is not found");for(var o=0;o<s.length;o++)n[o]&&(n[o].style.cssText=e,this.HasClass(n[o],"active")||(n[o].style.maxHeight="0px")),function(e){n[e].addEventListener("transitionend",(function(){this.classList.contains("active")?(t.OpenEnd(e,this),this.style.maxHeight=null):t.CloseEnd(e,this)}),!1)}(o),s[o].addEventListener("click",(function(e){e.preventDefault(),t.Toggle(e)}))}},t.prototype.Toggle=function(t){if(!this.accordion[0])return console.error(this.selector+": Not Found"),!1;var e=t.currentTarget?t.currentTarget:document.querySelectorAll(t)[0];this.HasClass(e,"active")?this.clickFlag||this.Close(t):this.clickFlag||this.Open(t)},t.prototype.Open=function(t){if(!this.accordion[0])return console.error(this.selector+": Not Found"),!1;this.clickFlag=!0;var e=t.currentTarget?t.currentTarget:t,i=this.GetParent(e,this.selector),n=Array.prototype.indexOf.call(i.querySelectorAll(this.btnElm),e),s=i.querySelectorAll(this.detailElm)[n];s.style.maxHeight=s.scrollHeight+"px",this.AddClass(e,"active"),this.AddClass(s,"active"),this.clickFlag=!1},t.prototype.Close=function(t){var e=this;if(!this.accordion[0])return console.error(this.selector+": Not Found"),!1;this.clickFlag=!0;var i=t.currentTarget?t.currentTarget:t,n=this.GetParent(i,this.selector),s=Array.prototype.indexOf.call(n.querySelectorAll(this.btnElm),i),o=n.querySelectorAll(this.detailElm)[s];this.RemoveClass(i,"active"),this.RemoveClass(o,"active"),o.style.maxHeight=o.scrollHeight+"px",setTimeout((function(){e.AddTransition(o),o.style.maxHeight="0px"}),10),this.clickFlag=!1},t.prototype.CloseIgnoreThis=function(t){if(!this.accordion[0])return console.error(this.selector+": Not Found"),!1;for(var e=t,i=this.GetParent(e,this.selector),n=Array.prototype.indexOf.call(i.querySelectorAll(this.btnElm),e),s=i.querySelectorAll(this.btnElm),o=i.querySelectorAll(this.detailElm),l=0;l<s.length;l++)l!=n&&(s[l].classList.remove("active"),r(l));function r(t){o[t].classList.remove("active"),setTimeout((function(){o[t].style.maxHeight="0px"}),100)}},t.prototype.GetParent=function(t,e){var i,n=t,s=0;for(i=e.split(".")[1]?e.split(".")[1]:e.split("#")[1]?e.split("#")[1]:e;s<100&&(n=n.parentNode).tagName.toLowerCase()!=i;){if(n.className){if(n.className.match(i))break}else if(n.id&&n.id.match(i))break;s++}return n},t.prototype.AddClass=function(t,e){t.classList?t.classList.add(e):t.className+=" "+e},t.prototype.RemoveClass=function(t,e){t.classList?t.classList.remove(e):t.className=t.className.replace(new RegExp("(^|\\b)"+e.split(" ").join("|")+"(\\b|$)","gi")," ")},t.prototype.HasClass=function(t,e){var i=!1;return t.classList?t.classList.contains(e)&&(i=!0):new RegExp("(^| )"+e+"( |$)","gi").test(t.className)&&(i=!0),i},t},"function"==typeof define&&define.amd?define(s):"object"==typeof i?e.exports=s():n.mgnAccordion=s()},{}],2:[function(t,e,i){var n,s;n=this,s=function(){function t(t,e){this.selector=t,this.menu=document.querySelectorAll(this.selector)[0],null==e&&(e={}),this.globalNav=e.globalNav?e.globalNav:"#globalnav",this.activeName=e.activeName?e.activeName:"active",this.closePoint=e.closePoint?e.closePoint:null,this.noScroll=null==e.noScroll||e.noScroll,this.globalNavElm=document.querySelectorAll(this.globalNav)[0],this.flag=!1,this.scrollVal=null,this.baseWinWidth=window.innerWidth,this.OpenStart=function(){},this.OpenEnd=function(){},this.CloseStart=function(){},this.CloseEnd=function(){},this.menu&&this.Init()}return t.prototype.Init=function(){var t=this;this.menu.addEventListener("click",(function(){t.flag?t.Close():t.Open()})),window.addEventListener("resize",(function(){var e=window.innerWidth;t.closePoint&&t.flag&&(t.baseWinWidth<e?t.baseWinWidth<t.closePoint&&t.closePoint<e&&t.Close():t.baseWinWidth>t.closePoint&&t.closePoint>e&&t.Close(),t.baseWinWidth=e)}))},t.prototype.Open=function(t){if(!this.menu)return console.error(this.selector+": Not Found"),!1;var e=this;this.scrollVal=document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop,e.OpenStart(),this.AddClass(this.menu,this.activeName),this.AddClass(this.globalNavElm,this.activeName);var i=function(){e.OpenEnd(),e.globalNavElm.removeEventListener("transitionend",i)};if(this.globalNavElm.addEventListener("transitionend",i,!1),this.noScroll){this.htmlTag=document.getElementsByTagName("html")[0];var n="position: fixed; ";n+="width: 100%; ",n+="top:"+-this.scrollVal+"px;",this.htmlTag.style.cssText=n}this.flag=!0},t.prototype.Close=function(){if(!this.menu)return console.error(this.selector+": Not Found"),!1;var t=this;t.CloseStart(),this.noScroll&&(this.htmlTag.style.position="static"),this.noScroll&&window.scroll(0,this.scrollVal),this.RemoveClass(this.menu,this.activeName),this.RemoveClass(this.globalNavElm,this.activeName);var e=function(){t.CloseEnd(),t.globalNavElm.removeEventListener("transitionend",e)};this.globalNavElm.addEventListener("transitionend",e,!1),this.flag=!1},t.prototype.AddClass=function(t,e){t.classList?t.classList.add(e):t.className+=" "+e},t.prototype.RemoveClass=function(t,e){t.classList?t.classList.remove(e):t.className=t.className.replace(new RegExp("(^|\\b)"+e.split(" ").join("|")+"(\\b|$)","gi")," ")},t},"function"==typeof define&&define.amd?define(s):"object"==typeof i?e.exports=s():n.mgnMenu=s()},{}],3:[function(t,e,i){var n,s;n=this,s=function(){function t(){this._ua=navigator.userAgent,this._ver=navigator.appVersion;var t=this._ua.toLowerCase(),e=this._ver.toLowerCase();this.isMSIE=t.indexOf("msie")>-1&&-1==t.indexOf("opera"),this.isIE6=this.isMSIE&&e.indexOf("msie 6.")>-1,this.isIE7=this.isMSIE&&e.indexOf("msie 7.")>-1,this.isIE8=this.isMSIE&&e.indexOf("msie 8.")>-1,this.isIE9=this.isMSIE&&e.indexOf("msie 9.")>-1,this.isIE10=this.isMSIE&&e.indexOf("msie 10.")>-1,this.isIE11=t.indexOf("trident/7")>-1,this.isIE=this.isMSIE||this.isIE11,this.isEdge=t.indexOf("edge")>-1,this.isChrome=t.indexOf("chrome")>-1&&-1==t.indexOf("edge"),this.isFirefox=t.indexOf("firefox")>-1,this.isSafari=t.indexOf("safari")>-1&&-1==t.indexOf("chrome"),this.isOpera=t.indexOf("opera")>-1,this.isIphone=t.indexOf("iphone")>0,this.isIpod=t.indexOf("ipod")>0,this.isAndroid=t.indexOf("android")>0&&t.indexOf("mobile")>0,this.isWinPhone=t.indexOf("windows phone")>0,this.isIpad=t.indexOf("ipad")>0,this.isAndroidTab=t.indexOf("android")>0&&-1==t.indexOf("mobile"),this.isSp=this.isIphone||this.isIpod||this.isAndroid||this.isWinPhone,this.isTab=this.isIpad||this.isAndroidTab,this.isTouch="createTouch"in document||"ontouchstart"in document}return t.prototype.GetIosVersion=function(){var t,e;return this.isIphone||this.isIpod||this.isIpad?(t=this._ver.match(/OS (\d+)_(\d+)_?(\d+)?/),e=[parseInt(t[1],10),parseInt(t[2],10),parseInt(t[3]||0,10)],Number(e[0]+"."+e[1])):e},t.prototype.GetAndroidVersion=function(){if(this.isAndroid)return Number(parseFloat(this._ua.slice(this._ua.indexOf("Android")+8)))},t},"function"==typeof define&&define.amd?define(s):"object"==typeof i?e.exports=s():n.mgnUa=s()},{}],4:[function(t,i,n){!function(t,e){if("function"==typeof define&&define.amd)define(e);else if("object"==typeof n)i.exports=e();else{var s=e();for(var o in s)t[o]=s[o]}}(this,(function(){return{AddClass:function(t,e){t.classList?t.classList.add(e):t.className+=" "+e},RemoveClass:function(t,e){t.classList?t.classList.remove(e):t.className=t.className.replace(new RegExp("(^|\\b)"+e.split(" ").join("|")+"(\\b|$)","gi")," ")},HasClass:function(t,i){var n=!1;return t.classList?t.classList.contains(i)&&(n=!0):new RegExp("(^| )"+i+"( |$)","gi").test(e.target.className)&&(n=!0),n},SetCss:function(t,e){var i="";for(var n in e)i+=n+":"+e[n]+"; ";t.style.cssText=i},GetParents:function(t,e){var i,n=t,s=0;for(i=e.split(".")[1]?e.split(".")[1]:e.split("#")[1]?e.split("#")[1]:e;s<100&&(n=n.parentNode).tagName.toLowerCase()!=i;){if(n.className){if(n.className.match(i))break}else if(n.id&&n.id.match(i))break;s++}return n},GetSiblings:function(t,e){var i=Array.prototype.filter.call(t.parentNode.children,(function(i,n){var s=t.parentNode.querySelectorAll(e),o=null;for(n=0;n<s.length;n++)i===s[n]&&(o=s[n]);return i!==t&&i===o}));return 0!=i.length?i:null},Not:function(t,e){var i=!1,n=e.split(".")[1]?e.split(".")[1]:e.split("#")[1];return t.classList?t.classList.contains(n)&&(i=!0):new RegExp("(^| )"+n+"( |$)","gi").test(t.className)&&(i=!0),t.id==n&&(i=!0),i},GetOffset:function(t){var e=t.getBoundingClientRect();return{top:e.top+window.pageYOffset-document.documentElement.clientTop,left:e.left+window.pageXOffset-document.documentElement.clientLeft}},GetHeightData:function(t){var e=window.getComputedStyle(t),i=t.offsetHeight,n=parseFloat(e.borderTopWidth),s=parseFloat(e.borderBottomWidth),o=parseFloat(e.paddingTop),l=parseFloat(e.paddingBottom);return{height:i,bordertop:n,borderBottom:s,paddingTop:o,paddingBottom:l,outerHeight:i+n+s+o+l}},GetWidthData:function(t){var e=window.getComputedStyle(t),i=t.offsetWidth,n=parseFloat(e.borderLeftWidth),s=parseFloat(e.borderRightWidth),o=parseFloat(e.paddingLeft),l=parseFloat(e.paddingRight);return{width:i,borderLeft:n,borderRight:s,paddingLeft:o,paddingRight:l,outerWidth:i+n+s+o+l}}}}))},{}],5:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n,s=t("mgn-accordion"),o=(n=s)&&n.__esModule?n:{default:n};t("mgn-utility");i.default=function(){new o.default(".j-accordion",{toggleSpeed:200,btnElm:"dt",detailElm:"dd"})}},{"mgn-accordion":1,"mgn-utility":4}],6:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n,s=t("mgn-utility"),o=t("mgn-menu"),l=(n=o)&&n.__esModule?n:{default:n};i.default=function(){var t;document.querySelector(".j-menu")&&function(){var e=0,i=new l.default(".j-menu",{globalNav:".j-menu",activeName:"is-open",closePoint:768,noScroll:!1});i.OpenStart=function(){e=window.pageYOffset,(0,s.AddClass)(document.getElementsByTagName("html")[0],"is-gnav_open"),setTimeout((function(){(0,s.AddClass)(document.getElementsByTagName("html")[0],"is-gnav_fix"),window.scrollTo(0,0)}),200)},i.CloseStart=function(){(0,s.RemoveClass)(document.getElementsByTagName("html")[0],"is-gnav_fix"),window.scrollTo(0,e),setTimeout((function(){(0,s.RemoveClass)(document.getElementsByTagName("html")[0],"is-gnav_open")}),100)};var n=document.querySelectorAll(".l-header__page a");for(t=0;t<n.length;t++)n[t].addEventListener("click",(function(){i.Close()}))}()}},{"mgn-menu":2,"mgn-utility":4}],7:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});t("mgn-utility");var n,s=t("mgn-ua");new((n=s)&&n.__esModule?n:{default:n}).default;i.default=function(){var t=document.querySelectorAll(".l-header__inner")[0];t&&document.addEventListener("scroll",(function(){var e;e=document.documentElement.scrollLeft,t.style.left=-e+"px"}))}},{"mgn-ua":3,"mgn-utility":4}],8:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n,s=t("mgn-utility"),o=t("mgn-ua");var l=new((n=o)&&n.__esModule?n:{default:n}).default;i.default=function(){var t=document.getElementsByTagName("a"),e=void 0,i=void 0;l.isSp||l.isTab?(e="touchstart",i="touchend"):(e="mouseenter",i="mouseleave");for(var n=function(t){(0,s.AddClass)(t.currentTarget,"is-hover")},o=function(t){(0,s.RemoveClass)(t.currentTarget,"is-hover")},r=0;r<t.length;r++)t[r].removeEventListener("transitionend",n),t[r].addEventListener(e,n),t[r].addEventListener(i,o)}},{"mgn-ua":3,"mgn-utility":4}],9:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=t("mgn-utility");i.default=function(){var t=document.getElementsByTagName("html")[0],e=null,i=void 0,s=function(){clearTimeout(e),e=setTimeout((function(){window.innerWidth>640?(i||null==i)&&((0,n.RemoveClass)(t,"is-transition_sp"),(0,n.AddClass)(t,"is-transition_pc"),i=!1):(i&&null!=i||((0,n.AddClass)(t,"is-transition_sp"),(0,n.RemoveClass)(t,"is-transition_pc")),i=!0)}),150)};window.addEventListener("resize",(function(){s()})),window.addEventListener("load",(function(){s()}))}},{"mgn-utility":4}],10:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var n=t("mgn-utility");i.default=function(){var t=document.querySelector("html"),e=!1,i=function(){window.pageYOffset>10?(e||(0,n.AddClass)(t,"is-scroll"),e=!0):(e&&(0,n.RemoveClass)(t,"is-scroll"),e=!1)};t&&(document.addEventListener("scroll",(function(){i()})),document.addEventListener("load",(function(){i()})))}},{"mgn-utility":4}],11:[function(t,e,i){"use strict";Object.defineProperty(i,"__esModule",{value:!0});t("mgn-utility"),a(t("mgn-ua")),a(t("./_show_pagetop"));var n=a(t("./_set_transition")),s=a(t("./_header_menu")),o=a(t("./_horizontal_scroll")),l=a(t("./_accordion")),r=a(t("./_hover_touch"));function a(t){return t&&t.__esModule?t:{default:t}}i.default=function(){(0,r.default)(),(0,o.default)(),(0,s.default)(),(0,n.default)(),(0,l.default)()}},{"./_accordion":5,"./_header_menu":6,"./_horizontal_scroll":7,"./_hover_touch":8,"./_set_transition":9,"./_show_pagetop":10,"mgn-ua":3,"mgn-utility":4}],12:[function(t,e,i){"use strict";var n,s=t("./common/common");(0,((n=s)&&n.__esModule?n:{default:n}).default)()},{"./common/common":11}]},{},[12]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
